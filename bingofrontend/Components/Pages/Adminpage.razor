@page "/admin"
@rendermode InteractiveServer
@inject NavigationManager nav


<PageTitle>Admin Page</PageTitle>

<div class="modalpw-overlay" style="@(_isVisible ? "display: block;" : "display: none;")">
    <div class="modalpw-content">
        <h2>Bitte Password und User eingeben:</h2>
        <div class="modalpw-input">
            <input class="modalpw-input" type="text" placeholder="Username" @bind="input.inputuser">
            <input class="modalpw-input" type="password" placeholder="Passwort" @bind="input.inputpw">
        </div>
        <button class="buttonmain" @onclick="checkPW">Anmelden</button>
    <p style="color:red; margin: 10px;">@message</p>
    </div>
</div>


<h1>Admin Page</h1>
<div class="bingo-container">
    <div class="bingo-addword">
        <h2>Please enter new Words:</h2>
        <input class="modalpw-input" type="text">
        <div>
            <button class="buttonmain">Add</button>
            <button class="buttonmain">Save to File</button>
            <button class="buttonmain">Refresh</button>
            <button class="buttonmain">Edit</button>
        </div>
    </div>
    <div class="bingo-table-add-container">
        <table class="bingo-table-add">
            <thead>
                <tr>
                    <th>Word</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @for(int i = 0; i < length; i++) {
                    localindex = i;
                    <tr>
                        @*
                        <td style="@(!_isVisibleedit ? "displac: block;" : "display: none;")">@admin.currentwords[i]</td>
                        <td style="@(_isVisibleedit ? "display: flexbox;" : "display: none;")"><input type="text" placeholder="@admin.currentwords[i]" class="modalpw-input" @bind="admin._changedWord"></td>
                        *@
                        <div style="display: row; gap: 10px;">
                            <td>
                                <button class="buttonmain"@*@onclick="@(e => delete(e, localindex))"*@>Delete</button>
                                <button @*style="@(_isVisibleedit ? "display: flexbox" : "display: none;")" class="buttonmain" @onclick="@(e => saveEdit(e, localindex))"*@>Save Change</button>
                            </td>
                        </div>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
+

@code {
    Userinp input = new Userinp();
    int localindex;
    int length = 0;
    private string path = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "Data", "words.json");
    //Message vor false PW:
    private string message = "";
    
    //pshhhh no pw here :D
    private string user = "admin";
    private string pw = "diamondhost123";

    private bool _isVisibleedit = false;

    //bool for pop up
    private bool _isVisible = true;
    protected override void OnInitialized() {
        //Todo: API to rust server :D
    }

    private void checkPW() {
        message = "";
        if(!string.IsNullOrEmpty(input.inputpw) && !string.IsNullOrEmpty(input.inputuser)) {
            if(input.inputpw == pw && input.inputuser == user)
                _isVisible = false;
            else message = "Falscher Benutzer / Falsches Passwort!";
        } else {
            message = "User und Passwort d√ºrfen nicht leer sein!";
        }

    }

    private void edit(MouseEventArgs e){
        _isVisibleedit = true;
    }

    private void saveEdit(MouseEventArgs e, int localindex) {
        Console.WriteLine(localindex);
    }
    public void refresh() {
        localindex = 0;
        StateHasChanged();
    }
}
